import{_ as e,o as a,c as n,h as s}from"./app.f8544706.js";const b=JSON.parse('{"title":"体验electron仿网易云音乐桌面版","description":"","frontmatter":{"author":"Younglina","date":"2018-11-01","categories":["项目"],"tags":["学习","vue","electron"],"title":"体验electron仿网易云音乐桌面版"},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"electron","slug":"electron","link":"#electron","children":[]},{"level":2,"title":"vue","slug":"vue","link":"#vue","children":[]},{"level":2,"title":"预览","slug":"预览","link":"#预览","children":[]},{"level":2,"title":"项目流程","slug":"项目流程","link":"#项目流程","children":[{"level":3,"title":"搭建","slug":"搭建","link":"#搭建","children":[]},{"level":3,"title":"electron-packager","slug":"electron-packager","link":"#electron-packager","children":[]},{"level":3,"title":"electron-builder","slug":"electron-builder","link":"#electron-builder","children":[]},{"level":3,"title":"还是根据自己的需要选择","slug":"还是根据自己的需要选择","link":"#还是根据自己的需要选择","children":[]}]},{"level":2,"title":"插件方面","slug":"插件方面","link":"#插件方面","children":[]},{"level":2,"title":"electron","slug":"electron-1","link":"#electron-1","children":[]},{"level":2,"title":"iconfont","slug":"iconfont","link":"#iconfont","children":[]},{"level":2,"title":"打包","slug":"打包","link":"#打包","children":[]},{"level":2,"title":"最后","slug":"最后","link":"#最后","children":[]}],"relativePath":"write/project/electron-cloud-music.md","lastUpdated":1662613821000}'),l={name:"write/project/electron-cloud-music.md"},r=s(`<h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-hidden="true">#</a></h2><p>像官网说的那样，electron-vue 就是基于 vue 来构造 electron 应用程序的样板代码。electron-vue 开发起来就和 vue 一样，只是如果有特殊的需求需要修改应用的话就要用到 electron 相关的 api，项目中的数据来自<a href="https://binaryify.github.io/NeteaseCloudMusicApi" target="_blank" rel="noreferrer">这里</a>，感谢大佬的分享。项目地址<a href="https://github.com/lucaswww/my-electron-vue" target="_blank" rel="noreferrer">git 地址</a></p><h2 id="electron" tabindex="-1">electron <a class="header-anchor" href="#electron" aria-hidden="true">#</a></h2><p>Electron 是由 Github 开发，用 HTML，CSS 和 JavaScript 来<strong>构建跨平台桌面应用程序</strong>的一个开源库。 Electron 通过将 Chromium 和 Node.js 合并到同一个运行时环境中，并将其打包为 Mac，Windows 和 Linux 系统下的应用来实现这一目的。(摘之<a href="https://electronjs.org/docs/tutorial/about" target="_blank" rel="noreferrer">官网</a>)</p><h2 id="vue" tabindex="-1">vue <a class="header-anchor" href="#vue" aria-hidden="true">#</a></h2><p>vue 的话就不多提了，<a href="https://cn.vuejs.org/v2/guide/" target="_blank" rel="noreferrer">网站</a></p><h2 id="预览" tabindex="-1">预览 <a class="header-anchor" href="#预览" aria-hidden="true">#</a></h2><p><img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3d82d8505236?w=1000&amp;h=670&amp;f=png&amp;s=449881" alt=""></p><p><img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3d7d3ca108ca?w=1000&amp;h=670&amp;f=png&amp;s=174460" alt=""></p><p><img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3d7735e372f4?w=1000&amp;h=670&amp;f=png&amp;s=467554" alt=""></p><p><img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3d7258266506?w=1000&amp;h=670&amp;f=png&amp;s=114968" alt=""></p><ul><li><p>18/11/05 更新 点击左侧歌单栏跳转对应歌单详情 <img src="https://user-gold-cdn.xitu.io/2018/11/5/166e3149d80490b3?w=1000&amp;h=670&amp;f=png&amp;s=164060" alt=""></p></li><li><p>18/11/10 更新 我的歌手、电台 <img src="https://user-gold-cdn.xitu.io/2018/11/10/166fb73940eddf40?w=1000&amp;h=670&amp;f=png&amp;s=77279" alt=""><img src="https://user-gold-cdn.xitu.io/2018/11/10/166fb7459cf50a1a?w=1000&amp;h=670&amp;f=png&amp;s=78189" alt=""></p></li><li><p>18/11/12 更新 播放页面暂时排版 <img src="https://user-gold-cdn.xitu.io/2018/11/12/16707128f076819d?w=1000&amp;h=670&amp;f=png&amp;s=452343" alt=""></p></li></ul><h2 id="项目流程" tabindex="-1">项目流程 <a class="header-anchor" href="#项目流程" aria-hidden="true">#</a></h2><p>可以先去<a href="https://electronjs.org/docs/tutorial/first-app" target="_blank" rel="noreferrer">electron 官网</a>了解一下它的开发流程，知道它大体是个怎样的情况就好，后面使用的时候可以再来看看它的 api.</p><h3 id="搭建" tabindex="-1">搭建 <a class="header-anchor" href="#搭建" aria-hidden="true">#</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm install -g vue-cli</span></span>
<span class="line"><span style="color:#A6ACCD;">vue init simulatedgreg/electron-vue ele-vue</span></span>
<span class="line"><span style="color:#A6ACCD;">cd ele-vue</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install</span></span>
<span class="line"><span style="color:#A6ACCD;">npm run dev</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>安装过程中一路回车就行，中途会有个让你选择插件的时候，也是为了后面自己手动去装，这里就根据需要选择。 <img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3ba53a53516b?w=564&amp;h=221&amp;f=jpeg&amp;s=37367" alt=""></p><h3 id="electron-packager" tabindex="-1">electron-packager <a class="header-anchor" href="#electron-packager" aria-hidden="true">#</a></h3><p>如果你刚开始制作 electron 应用程序或只需要创建简单的可执行文件，那么 electron-packager 就可以满足你的需求。</p><h3 id="electron-builder" tabindex="-1">electron-builder <a class="header-anchor" href="#electron-builder" aria-hidden="true">#</a></h3><p>如果你正在寻找完整的安装程序、自动更新的支持、使用 Travis CI 和 AppVeyor 的 CI 构建、或本机 node 模块的自动重建，那么你会需要 electron-builder。</p><h3 id="还是根据自己的需要选择" tabindex="-1">还是根据自己的需要选择 <a class="header-anchor" href="#还是根据自己的需要选择" aria-hidden="true">#</a></h3><p><img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3bd60782fe48?w=563&amp;h=230&amp;f=png&amp;s=39591" alt=""> 这些完成以后就可以像开发 vue 一样去开发项目了。</p><h2 id="插件方面" tabindex="-1">插件方面 <a class="header-anchor" href="#插件方面" aria-hidden="true">#</a></h2><p>electron-vue 中也是能使用前端的 ui 组件的，以 element-ui 为例</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm i element-ui -S</span></span>
<span class="line"><span style="color:#A6ACCD;">然后在main.js中引入</span></span>
<span class="line"><span style="color:#A6ACCD;">import ElementUI from &#39;element-ui&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">import &#39;element-ui/lib/theme-chalk/index.css&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Vue.use(ElementUI);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="electron-1" tabindex="-1">electron <a class="header-anchor" href="#electron-1" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">一点自己的配置</span></span>
<span class="line"><span style="color:#A6ACCD;">mainWindow = new BrowserWindow({</span></span>
<span class="line"><span style="color:#A6ACCD;">    height: 670,//窗口高度</span></span>
<span class="line"><span style="color:#A6ACCD;">    width: 1000,//窗口宽度</span></span>
<span class="line"><span style="color:#A6ACCD;">    frame: true,//是否显示窗口边框</span></span>
<span class="line"><span style="color:#A6ACCD;">    resizable: false,//可否缩放</span></span>
<span class="line"><span style="color:#A6ACCD;">    movable: true//可否移动</span></span>
<span class="line"><span style="color:#A6ACCD;">  })</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="iconfont" tabindex="-1">iconfont <a class="header-anchor" href="#iconfont" aria-hidden="true">#</a></h2><p>element 的 icon 可能并不能满足我们的需求，这时候可以选择使用阿里的 iconfont。<br> 先去<a href="http://www.iconfont.cn/" target="_blank" rel="noreferrer">iconfont</a>官网选择你想要的 icon，</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3cc0398e3569?w=130&amp;h=144&amp;f=png&amp;s=7982" alt=""> 选择添加到你自己的项目 <img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3ccb49b2334c?w=301&amp;h=272&amp;f=png&amp;s=11194" alt=""> 然后可以在自己的项目中选择生成，复制代码到 electron-vue 项目的 index.ejs 中，正常引用 css <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;//at.alicdn.com/t/font_883876_bfzwywhpal.css&quot;&gt;</code> 使用<code>&lt;i class=&quot;iconfont icon-play-circle&quot;&gt;&lt;/i&gt;</code><img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3cdb83b43cdf?w=575&amp;h=299&amp;f=png&amp;s=26167" alt=""></p><h2 id="打包" tabindex="-1">打包 <a class="header-anchor" href="#打包" aria-hidden="true">#</a></h2><p>直接使用<code>npm run build</code>就可以打包，若是要针对不同平台则按需添加参数，打包后的安装包在项目的 build 文件夹下</p><h2 id="最后" tabindex="-1">最后 <a class="header-anchor" href="#最后" aria-hidden="true">#</a></h2><p>界面是两天开发出来的。。所以某些样式不太美观。有个问题是打包以后 iconfont 不显示了，这个问题后面再解决一下，最直接的办法还是把它下到本地引用。</p>`,35),t=[r];function i(p,c,o,d,u,h){return a(),n("div",null,t)}const g=e(l,[["render",i]]);export{b as __pageData,g as default};
