import{_ as s,o as n,c as a,h as e}from"./app.f8544706.js";const C=JSON.parse('{"title":"体验mpvue仿网易云音乐手机版","description":"","frontmatter":{"date":"2018-08-31","title":"体验mpvue仿网易云音乐手机版","author":"Younglina","categories":["项目"],"tags":["学习","mpvue","小程序"]},"headers":[{"level":2,"title":"更新记录(前几次更新忘记写记录...)","slug":"更新记录-前几次更新忘记写记录","link":"#更新记录-前几次更新忘记写记录","children":[]},{"level":2,"title":"预览（不动点大图看）","slug":"预览-不动点大图看","link":"#预览-不动点大图看","children":[]},{"level":2,"title":"目前完成","slug":"目前完成","link":"#目前完成","children":[]},{"level":2,"title":"项目搭建","slug":"项目搭建","link":"#项目搭建","children":[]},{"level":2,"title":"请求方面","slug":"请求方面","link":"#请求方面","children":[]},{"level":2,"title":"路由跳转传参","slug":"路由跳转传参","link":"#路由跳转传参","children":[]},{"level":2,"title":"vuex 方面","slug":"vuex-方面","link":"#vuex-方面","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"write/project/wx-cloud-music.md","lastUpdated":1662613821000}'),l={name:"write/project/wx-cloud-music.md"},p=e(`<h1 id="my-project" tabindex="-1">my-project <a class="header-anchor" href="#my-project" aria-hidden="true">#</a></h1><p>在尝试开发了一个微信小程序之，后发现有 mpvue 这么个东西可以来开发小程序以后就忍不住了，所以把小程序和我用 vue 开发过的版本结合修改以后，再尝试用 mpvue+iview-weapp 开发一个版本。<br> 后台接口用的是<a href="https://binaryify.github.io/NeteaseCloudMusicApi/#/" target="_blank" rel="noreferrer">NeteaseCloudMusicApi</a>,感谢大佬的分享</p><p><a href="https://github.com/lucaswww/my-project" target="_blank" rel="noreferrer">git 地址</a>，demo 项目代码质量不是很好，哈哈哈哈多多见谅 😁</p><h2 id="更新记录-前几次更新忘记写记录" tabindex="-1">更新记录(前几次更新忘记写记录...) <a class="header-anchor" href="#更新记录-前几次更新忘记写记录" aria-hidden="true">#</a></h2><p>18/9/25 修改账号页</p><p><img src="https://user-gold-cdn.xitu.io/2018/9/25/1660fd9094120d99?w=631&amp;h=419&amp;f=jpeg&amp;s=62891" alt=""></p><h2 id="预览-不动点大图看" tabindex="-1">预览（不动点大图看） <a class="header-anchor" href="#预览-不动点大图看" aria-hidden="true">#</a></h2><p><img src="https://user-gold-cdn.xitu.io/2018/8/31/1658e1511bcb13fe?w=250&amp;h=450&amp;f=gif&amp;s=4675839" alt=""></p><h2 id="目前完成" tabindex="-1">目前完成 <a class="header-anchor" href="#目前完成" aria-hidden="true">#</a></h2><ul><li>推荐歌单</li><li>排行榜</li><li>歌单详情</li><li>播放页</li><li>歌单评论</li><li>搜索</li><li>扫一扫(基础功能)</li><li>周边(百度地图 api)</li></ul><h2 id="项目搭建" tabindex="-1">项目搭建 <a class="header-anchor" href="#项目搭建" aria-hidden="true">#</a></h2><ul><li>最开始还是要把<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noreferrer">微信小程序开发工具</a>下载一下</li><li>mpvue 项目建立，跟着官网走一遍是最快的 <a href="http://mpvue.com/mpvue/quickstart/" target="_blank" rel="noreferrer">快速上手</a></li><li>支持 iview-weapp，还是跟着官网<a href="https://weapp.iviewui.com/docs/guide/start" target="_blank" rel="noreferrer">快速上手</a>，这里就一个地方要注意，把下载下来的<strong>iview-weapp 项目的 dist 文件夹</strong>（可以改名字）是放到<strong>你项目编译后的</strong>dist 目录下，iview-weapp 官网没有效果的展示，所以建议扫它上面的二维码查看效果以后对照它的代码进行开发</li><li>最后就是用微信小程序开发工具打开项目(不是 dist 目录)，用你常用的编译器编写代码（src 目录下）</li></ul><h2 id="请求方面" tabindex="-1">请求方面 <a class="header-anchor" href="#请求方面" aria-hidden="true">#</a></h2><p>微信小程序有自带的 wx.request()可以使用，还可以用<a href="https://wendux.github.io/dist/#/doc/flyio/readme" target="_blank" rel="noreferrer">Flyio</a>，我是用的 Flyio<br> 具体使用的话可以再每个模块中</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">var Fly=require(&quot;flyio/dist/npm/wx&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">var fly=new Fly</span></span>
<span class="line"><span style="color:#A6ACCD;">fly.get(url).then(res=&gt;{})</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>还有就是在 main.js 中</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const Fly = require(&#39;flyio/dist/npm/wx&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;">let fly = new Fly();</span></span>
<span class="line"><span style="color:#A6ACCD;">Vue.prototype.$fly = fly;</span></span>
<span class="line"><span style="color:#A6ACCD;">//模块中使用</span></span>
<span class="line"><span style="color:#A6ACCD;">this.$fiy.get(url).then(res=&gt;{})</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="路由跳转传参" tabindex="-1">路由跳转传参 <a class="header-anchor" href="#路由跳转传参" aria-hidden="true">#</a></h2><p>wx.navigateTo({url:&#39;../test/main?id=&#39;+id})<br> 第一种：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">onShow (options) {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">let id = options.id</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>第二种：在所有页面组件内可以通过 this.$root.$mp.query 获取,要注意就是：写在 mounted 函数里，写到 created 报错。</p><p>第三种：在所有的组件内可以通过 this.$root.$mp.appOptions 获取。<br> 正常情况下三种应该都是可以的，某一种没用的时候就尝试另外两种</p><h2 id="vuex-方面" tabindex="-1">vuex 方面 <a class="header-anchor" href="#vuex-方面" aria-hidden="true">#</a></h2><p>还是和 vue 里面的使用一样，简单的<br> /src/store/store.js</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">import Vue from &#39;vue&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">import Vuex from &#39;vuex&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Vue.use(Vuex);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">export default new Vuex.Store({</span></span>
<span class="line"><span style="color:#A6ACCD;">  state: {</span></span>
<span class="line"><span style="color:#A6ACCD;">   oneState:&#39;one&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">  },</span></span>
<span class="line"><span style="color:#A6ACCD;">  mutations: {</span></span>
<span class="line"><span style="color:#A6ACCD;">    setItem: (state,data) =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">      state.oneState = data</span></span>
<span class="line"><span style="color:#A6ACCD;">    },</span></span>
<span class="line"><span style="color:#A6ACCD;">  },</span></span>
<span class="line"><span style="color:#A6ACCD;">  getters : {</span></span>
<span class="line"><span style="color:#A6ACCD;">    getItem (state) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        return state.oneState</span></span>
<span class="line"><span style="color:#A6ACCD;">    },</span></span>
<span class="line"><span style="color:#A6ACCD;">});</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>/src/main.js</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">import store from &#39;./store/store&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">Vue.prototype.$store = store;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>/src/page/text.vue</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">import {mapGetters} from &#39;vuex&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  export default {</span></span>
<span class="line"><span style="color:#A6ACCD;">     computed:{</span></span>
<span class="line"><span style="color:#A6ACCD;">       ...mapGetters([</span></span>
<span class="line"><span style="color:#A6ACCD;">         &#39;oneState&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">        ])</span></span>
<span class="line"><span style="color:#A6ACCD;">     },</span></span>
<span class="line"><span style="color:#A6ACCD;">     },</span></span>
<span class="line"><span style="color:#A6ACCD;">     methods:{</span></span>
<span class="line"><span style="color:#A6ACCD;">         test(){</span></span>
<span class="line"><span style="color:#A6ACCD;">             this.$store.commit(&#39;setItem&#39;, &#39;two&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">         }</span></span>
<span class="line"><span style="color:#A6ACCD;">     }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><p>好了，基本的开发流程就是这样，具体的开发大部分还是像 vue 开发那样，自己在开发的时候，遇到的坑还是有的，但网上基本都能找到解决方案，具体遇到的时候就查一查都能查到，收获很多。 最后这里还有一个用 vue 开发的版本可<a href="http://lucaswww.coding.me/my-music/dist/#/index/Music" target="_blank" rel="noreferrer">在线预览</a>,建议用 chrome 的手机模式预览</p>`,31),r=[p];function i(t,c,o,u,d,b){return n(),a("div",null,r)}const h=s(l,[["render",i]]);export{C as __pageData,h as default};
