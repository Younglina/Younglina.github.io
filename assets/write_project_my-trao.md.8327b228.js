import{_ as a,o as s,c as n,h as e}from"./app.f8544706.js";const m=JSON.parse('{"title":"体验trao开发微信小程序","description":"","frontmatter":{"date":"2018-11-20","title":"体验trao开发微信小程序","author":"Younglina","categories":["项目"],"tags":["学习","trao","小程序"]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"体验版预览","slug":"体验版预览","link":"#体验版预览","children":[]},{"level":2,"title":"Taro 简介","slug":"taro-简介","link":"#taro-简介","children":[]},{"level":2,"title":"Taro-ui","slug":"taro-ui","link":"#taro-ui","children":[]},{"level":2,"title":"React","slug":"react","link":"#react","children":[]},{"level":2,"title":"项目流程","slug":"项目流程","link":"#项目流程","children":[]},{"level":2,"title":"开发小程序注意事项","slug":"开发小程序注意事项","link":"#开发小程序注意事项","children":[]},{"level":2,"title":"开发相关","slug":"开发相关","link":"#开发相关","children":[{"level":3,"title":"路由和传值","slug":"路由和传值","link":"#路由和传值","children":[]},{"level":3,"title":"引用 iconfont","slug":"引用-iconfont","link":"#引用-iconfont","children":[]},{"level":3,"title":"父子组件","slug":"父子组件","link":"#父子组件","children":[]},{"level":3,"title":"获取 setState 以后的值","slug":"获取-setstate-以后的值","link":"#获取-setstate-以后的值","children":[]}]}],"relativePath":"write/project/my-trao.md","lastUpdated":1662613821000}'),l={name:"write/project/my-trao.md"},t=e(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-hidden="true">#</a></h2><p>前段时间用 mpvue 开发过一个仿网易云音乐的微信小程序(<a href="https://github.com/lucaswww/my-project" target="_blank" rel="noreferrer">链接</a>)，但似乎 mpvue 好像是不再维护了，偶然得知有个<a href="https://nervjs.github.io/taro/docs/README.html" target="_blank" rel="noreferrer">Taro</a>也可以开发小程序，但是用的是<a href="https://react.docschina.org/docs/hello-world.html" target="_blank" rel="noreferrer">React</a>，正好也想了解了解 React,所以体验了一下 Taro。<a href="https://github.com/lucaswww/my-taro" target="_blank" rel="noreferrer">git 地址</a><br> 程序体验<br><img src="https://user-gold-cdn.xitu.io/2018/11/28/1675820ca6aac26e?w=258&amp;h=258&amp;f=jpeg&amp;s=45801" alt=""> 发布成功以后发现正式环境 github 的 api</p><p><img src="https://user-gold-cdn.xitu.io/2018/12/3/1677485be5e32cc9?w=286&amp;h=93&amp;f=png&amp;s=5358" alt=""> 导致页面会一直在那里转，就有点尴尬(😅)</p><h2 id="体验版预览" tabindex="-1">体验版预览 <a class="header-anchor" href="#体验版预览" aria-hidden="true">#</a></h2><p><img src="https://user-gold-cdn.xitu.io/2018/12/3/16774b00e557ba87?w=411&amp;h=717&amp;f=gif&amp;s=459643" alt=""></p><h2 id="taro-简介" tabindex="-1">Taro 简介 <a class="header-anchor" href="#taro-简介" aria-hidden="true">#</a></h2><p>Taro 是一套遵循 React 语法规范的 多端开发 解决方案。使用 Taro，我们可以只书写一套代码，再通过 Taro 的编译工具，将源代码分别编译出可以在不同端（微信小程序、H5、RN 等）运行的代码，组件可以使用 Taro 的 Taro-ui。(摘至<a href="https://nervjs.github.io/taro/docs/README.html" target="_blank" rel="noreferrer">官网</a>)</p><h2 id="taro-ui" tabindex="-1">Taro-ui <a class="header-anchor" href="#taro-ui" aria-hidden="true">#</a></h2><p><a href="https://taro-ui.aotu.io/#/docs/quickstart" target="_blank" rel="noreferrer">Taro-ui</a>是一款基于 Taro 框架开发的多端 UI 组件库,里面的一些组件还是挺好用的，也挺好看的，官网很详细而且还有效果图提供观看和体验。</p><h2 id="react" tabindex="-1">React <a class="header-anchor" href="#react" aria-hidden="true">#</a></h2><p><a href="https://react.docschina.org/docs/hello-world.html" target="_blank" rel="noreferrer">React</a>的话跟着官网走一遍基本就能开发了，看了 react 以后还是觉得自己喜欢 vue 多一点(😂)</p><h2 id="项目流程" tabindex="-1">项目流程 <a class="header-anchor" href="#项目流程" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm install -g @tarojs/cli</span></span>
<span class="line"><span style="color:#A6ACCD;">taro init myApp</span></span>
<span class="line"><span style="color:#A6ACCD;">npm run dev:weapp</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="开发小程序注意事项" tabindex="-1">开发小程序注意事项 <a class="header-anchor" href="#开发小程序注意事项" aria-hidden="true">#</a></h2><p>（摘自官网）若使用 微信小程序预览模式 ，则需下载并使用<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html?t=18112721" target="_blank" rel="noreferrer">微信开发者工具</a>添加项目进行预览，此时需要注意微信开发者工具的项目设置</p><ul><li>需要设置关闭 ES6 转 ES5 功能，开启可能报错</li><li>需要设置关闭上传代码时样式自动补全，开启可能报错</li><li>需要设置关闭代码压缩上传，开启可能报错<br> 还有一些其他问题需要注意的，<a href="https://nervjs.github.io/taro/docs/before-dev-remind.html" target="_blank" rel="noreferrer">这里</a>基本都指出了，我在实际开发中好像也没遇到过里面提及过的问题(😂)</li></ul><h2 id="开发相关" tabindex="-1">开发相关 <a class="header-anchor" href="#开发相关" aria-hidden="true">#</a></h2><p>app.js 对应的就是小程序的 app.json 一些基本配置可以在这里完成，比如 tarBar</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">&quot;tabBar&quot;: {</span></span>
<span class="line"><span style="color:#A6ACCD;">   &quot;list&quot;: [</span></span>
<span class="line"><span style="color:#A6ACCD;">     {</span></span>
<span class="line"><span style="color:#A6ACCD;">       &quot;text&quot;: &quot;音乐&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       &quot;pagePath&quot;: &quot;pages/music/music&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       &quot;iconPath&quot;: &quot;./img/music.png&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       &quot;selectedIconPath&quot;: &quot;./img/music.png&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">     },</span></span>
<span class="line"><span style="color:#A6ACCD;">     {</span></span>
<span class="line"><span style="color:#A6ACCD;">       &quot;text&quot;: &quot;电影&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       &quot;pagePath&quot;: &quot;pages/index/index&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       &quot;iconPath&quot;: &quot;./img/movie.png&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       &quot;selectedIconPath&quot;: &quot;./img/movie.png&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">     }</span></span>
<span class="line"><span style="color:#A6ACCD;">   ]</span></span>
<span class="line"><span style="color:#A6ACCD;"> }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="路由和传值" tabindex="-1">路由和传值 <a class="header-anchor" href="#路由和传值" aria-hidden="true">#</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">//可使用Taro的</span></span>
<span class="line"><span style="color:#A6ACCD;">Taro.navigateTo({url:&#39;/pages/some?tag=tags&#39;})</span></span>
<span class="line"><span style="color:#A6ACCD;">//或者</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;Navigator url=&quot;/pages/some?tag=tags&quot;&gt;更多&lt;/Navigator&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">//获取时使用</span></span>
<span class="line"><span style="color:#A6ACCD;">this.$router.params.tag</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="引用-iconfont" tabindex="-1">引用 iconfont <a class="header-anchor" href="#引用-iconfont" aria-hidden="true">#</a></h3><p>先去<a href="http://www.iconfont.cn/" target="_blank" rel="noreferrer">iconfont</a>官网选择你想要的 icon，</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3cc0398e3569?w=130&amp;h=144&amp;f=png&amp;s=7982" alt=""> 选择添加到你自己的项目 <img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3ccb49b2334c?w=301&amp;h=272&amp;f=png&amp;s=11194" alt=""><img src="https://user-gold-cdn.xitu.io/2018/11/2/166d3cdb83b43cdf?w=575&amp;h=299&amp;f=png&amp;s=26167" alt=""> 复制上面的代码在浏览器里打开(前面记得加 https:)， 然后在自己的项目中 src 目录下新建一个 icon.scss 名字随意 css 也行，复制在浏览器打开以后的内容粘贴进去，最后在 app.tsc 中 import &#39;./icon.scss&#39;<br> 使用<code>&lt;Text class=&quot;iconfont icon-play-circle&quot;&gt;&lt;/Text&gt;</code></p><h3 id="父子组件" tabindex="-1">父子组件 <a class="header-anchor" href="#父子组件" aria-hidden="true">#</a></h3><p>在其他地方写好子组件后，父组件内直接 import 就行，传值的话直接在引用子组件时写入需要传递的数据即可</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">&lt;Child dataname={somedata} /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">//在子组件中使用</span></span>
<span class="line"><span style="color:#A6ACCD;">this.props.dataname即可获取传递过来的数据</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="获取-setstate-以后的值" tabindex="-1">获取 setState 以后的值 <a class="header-anchor" href="#获取-setstate-以后的值" aria-hidden="true">#</a></h3><p>在开发过程中发现不能直接获取 setState 以后的值，因为 this.state 和 props 一定是异步更新的，所以不能在 setState 后马上拿到 state 的值，正确做法是</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"> this.setState({</span></span>
<span class="line"><span style="color:#A6ACCD;">   somedata: 1</span></span>
<span class="line"><span style="color:#A6ACCD;"> }, () =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">   // 在这个函数内你可以拿到 setState 之后的值</span></span>
<span class="line"><span style="color:#A6ACCD;"> })</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,30),r=[t];function p(i,o,c,d,u,h){return s(),n("div",null,r)}const g=a(l,[["render",p]]);export{m as __pageData,g as default};
